# --> Catppuccin colors

thm_bg="#1E1E2E"
thm_fg="#dadae8"
thm_cyan="#89DCEB"
thm_black="#15121c"
thm_gray="#332e41"
thm_magenta="#c6aae8"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#A6E3A1"
thm_yellow="#f9e2af"
thm_blue="#98BBF5"
thm_orange="#fab387"
thm_black4="#575268"
thm_black3="#302D41"

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g mouse on

set -g focus-events on

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0

# start windows and panes numbering at 1
# 1 is easier to reach than 0
set -g base-index 1
setw -g pane-base-index 1
# make 0 window 10
bind-key 0 select-window -t ':10'

# statusbar
set -g status-left-length 0
set -g status-left ''
set -g status-right ''

set-option -g status-style bg=default
set -g status-fg white

set -g status-position top
set -g status-justify right

# set-window-option -g window-status-format '#[fg=white]#I#[fg=white] #W'
# set-window-option -g window-status-current-format '#[fg=green]#I #[fg=green]#W'

setw -g window-status-format "#[fg=$thm_blue] #I #[fg=$thm_blue] #W "
setw -g window-status-current-format "#[fg=$thm_orange] #I #[fg=$thm_orange] #W "
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue}"

setw -g allow-rename off

set -g message-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

# Snazzy selection
# set -g mode-style "fg=#000000,bg=#97979b"
# Catpuccin selection
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"
set -g clock-mode-style 12

bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode WheelUpPane send -N1 -X scroll-up
bind -T copy-mode WheelDownPane send -N1 -X scroll-down
bind-key -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

set -g status-interval 3
# set -g default-command "reattach-to-user-namespace /usr/local/bin/beep-beep"
# set -g status-left '      #[fg=blue]#(printf #{pane_pid})'
set -g default-command "reattach-to-user-namespace /opt/homebrew/bin/zsh"
set -g status-left '      #[fg=#a4b9ef]#(printf #{pane_current_path} | sed "s|^$HOME|~|") #[fg=#6E6C7E]#((head=$(< "#{pane_current_path}/.git/HEAD"); if [[ $head == ref:\ refs/heads/* ]]; then echo "${head#*/*/}"; elif [[ $head != "" ]]; then echo "(detached)"; fi))#(cd #{pane_current_path}; cp .git/index .git/tmux-index; test "$(GIT_INDEX_FILE=.git/tmux-index git status --porcelain --ignore-submodules -unormal)" && echo "*"; rm .git/tmux-index) #[fg=#c2e7f0]#(cd #{pane_current_path}; cp .git/index .git/tmux-index; echo "$(test "$(GIT_INDEX_FILE=.git/tmux-index git rev-list --left-right --count HEAD...@"{u}" | cut -f 2)" -gt 0 && echo "⇣")$(test "$(GIT_INDEX_FILE=.git/tmux-index git rev-list --left-right --count HEAD...@"{u}" | cut -f 1)" -gt 0 && echo "⇡")"; rm .git/tmux-index)'

bind -n M-q kill-window
bind -n C-q kill-pane

bind r source-file ~/.tmux.conf \; display "      Reloaded!"

setw -gq utf8 on

set -g history-limit 100000

# Window splits
unbind '"'
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind C-l send-keys 'C-l'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?[0-9]?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

set -sg escape-time 10
